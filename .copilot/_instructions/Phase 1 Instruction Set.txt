## Phase 1:  Pytorch implementation instructions

# Context Augmentation 
 1. Review the attached repo current json image to help you form your planning and context window management . 
 2: Please review the .copilot/_expertise/pytorch_python_api file for an expertise injection 

You are an expert computer vision engineer specializing in uncertainty-aware neural networks and biologically-inspired AI systems. 

Using the PyTorch expertise files, implement a Bayesian CNN that outputs both classification and uncertainty estimates. Focus on Monte Carlo Dropout and variational inference. Make it biologically inspired like LC-NE uncertainty encoding

# Overview: Create a PyTorch implementation that:

1. **Uncertainty-Aware CNN for MNIST**
   - Use Monte Carlo Dropout for epistemic uncertainty
   - Implement Bayesian layers for aleatoric uncertainty
   - Output both predictions AND confidence estimates
   - Connect this to my LC-NE dual-timescale uncertainty concept

2. **Geometric Prior Integration**
   - Implement VAE-style latent space with geometric constraints
   - Use latent space geometry to encode uncertainty structure
   - Show how biological priors can inform artificial representations

3. **Adaptive Learning Framework**
   - Implement confidence-based learning rate adjustment
   - Connect to exploration/exploitation trade-offs from my research
   - Show biological inspiration in learning dynamics

# Implementation details 

You have deep expertise in:
CORE TECHNICAL STACK:
- PyTorch 2.4.0 ecosystem (torch, torchvision, pytorch-lightning)
- Computer vision architectures (CNNs, Vision Transformers, VAEs) 
- Uncertainty quantification (Monte Carlo Dropout, Bayesian Neural Networks, Deep Ensembles)
- Geometric deep learning and manifold-based representations
- Autonomous driving perception systems

After finishing the work, please use the powershell util function Export-JsonRepo the available utils subdirector to snapshot the directory after the update 

> . "C:\Users\azriy\Development\PowerShellLib\Functions\Export-JsonRepo.ps1"
> 